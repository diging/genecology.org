# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-15 17:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import markupfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0010_externalresource'),
    ]

    operations = [
        migrations.CreateModel(
            name='RDFClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('identifier', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RDFProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('identifier', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RDFSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True, verbose_name='URI')),
            ],
        ),
        migrations.AlterField(
            model_name='contentrelation',
            name='description',
            field=markupfield.fields.MarkupField(blank=True, help_text='If appropriate, provide further elaboration on the nature of the relation.', rendered_field=True),
        ),
        migrations.AlterField(
            model_name='contentrelation',
            name='name',
            field=models.CharField(help_text='Descriptive name for the relation. E.g. "elaborates on", "provides context for", "is related to".', max_length=1000),
        ),
        migrations.AlterField(
            model_name='data',
            name='description',
            field=markupfield.fields.MarkupField(help_text='Depends on the resource type. To quote the original resource, use the markdown blockquote, e.g. "&gt; Here is some quoted text".', rendered_field=True),
        ),
        migrations.AlterField(
            model_name='data',
            name='identifier',
            field=models.CharField(help_text='The unique identifier used to refer to the original resource. For archives, this could be a collection/bundle/item identifier. For web resources, this coud be the URL (i.e. same as source location).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='data',
            name='identifier_type',
            field=models.CharField(choices=[('url', 'URL'), ('uri', 'URI'), ('archive', 'Archival identifier'), ('catalog', 'Library catalog identifier'), ('doi', 'DOI'), ('handle', 'Handle'), ('isbn', 'ISBN'), ('issn', 'ISSN'), ('other', 'Other')], max_length=1000),
        ),
        migrations.AlterField(
            model_name='data',
            name='name',
            field=models.CharField(help_text='If available, use the original title of the resource. Otherwise, create a concise but descriptive title (e.g. "James Gregor obituary").', max_length=255),
        ),
        migrations.AlterField(
            model_name='data',
            name='source',
            field=models.CharField(help_text='Name of the source (e.g. name of a newspaper, website).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='data',
            name='source_location',
            field=models.URLField(blank=True, help_text='For online resources, this should be the location of the resource. For archives, this should be a link to the finding aid, if available.', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='created_original',
            field=models.DateField(help_text='Date on which the original resource was created. For example, the publication date of an article.', verbose_name='original creation date'),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='description',
            field=markupfield.fields.MarkupField(help_text='Depends on the resource type. To quote the original resource, use the markdown blockquote, e.g. "&gt; Here is some quoted text".', rendered_field=True),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='identifier',
            field=models.CharField(help_text='The unique identifier used to refer to the original resource. For archives, this could be a collection/bundle/item identifier. For web resources, this coud be the URL (i.e. same as source location).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='identifier_type',
            field=models.CharField(choices=[('url', 'URL'), ('uri', 'URI'), ('archive', 'Archival identifier'), ('catalog', 'Library catalog identifier'), ('doi', 'DOI'), ('handle', 'Handle'), ('isbn', 'ISBN'), ('issn', 'ISSN'), ('other', 'Other')], max_length=1000),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='name',
            field=models.CharField(help_text='If available, use the original title of the resource. Otherwise, create a concise but descriptive title (e.g. "James Gregor obituary").', max_length=255),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='resource_type',
            field=models.CharField(choices=[('WB', 'Website'), ('JO', 'Journal article'), ('BK', 'Book'), ('PE', 'Periodical article'), ('DT', 'Dataset'), ('AR', 'Archive'), ('OT', 'Other')], max_length=2),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='source',
            field=models.CharField(help_text='Name of the source (e.g. name of a newspaper, website).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='externalresource',
            name='source_location',
            field=models.URLField(blank=True, help_text='For online resources, this should be the location of the resource. For archives, this should be a link to the finding aid, if available.', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='image',
            name='description',
            field=markupfield.fields.MarkupField(help_text='Depends on the resource type. To quote the original resource, use the markdown blockquote, e.g. "&gt; Here is some quoted text".', rendered_field=True),
        ),
        migrations.AlterField(
            model_name='image',
            name='identifier',
            field=models.CharField(help_text='The unique identifier used to refer to the original resource. For archives, this could be a collection/bundle/item identifier. For web resources, this coud be the URL (i.e. same as source location).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='image',
            name='identifier_type',
            field=models.CharField(choices=[('url', 'URL'), ('uri', 'URI'), ('archive', 'Archival identifier'), ('catalog', 'Library catalog identifier'), ('doi', 'DOI'), ('handle', 'Handle'), ('isbn', 'ISBN'), ('issn', 'ISSN'), ('other', 'Other')], max_length=1000),
        ),
        migrations.AlterField(
            model_name='image',
            name='image',
            field=models.FileField(blank=True, help_text='If appropriate, upload a digital copy of the image here.', null=True, upload_to='images/'),
        ),
        migrations.AlterField(
            model_name='image',
            name='name',
            field=models.CharField(help_text='If available, use the original title of the resource. Otherwise, create a concise but descriptive title (e.g. "James Gregor obituary").', max_length=255),
        ),
        migrations.AlterField(
            model_name='image',
            name='original_format',
            field=models.CharField(help_text='If possible, this should be a MIME-type (e.g. image/jpeg).', max_length=255),
        ),
        migrations.AlterField(
            model_name='image',
            name='remote',
            field=models.URLField(blank=True, help_text='If it is not possible to upload a copy of the image, enter the remote location of the image here.', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='image',
            name='source',
            field=models.CharField(help_text='Name of the source (e.g. name of a newspaper, website).', max_length=1000),
        ),
        migrations.AlterField(
            model_name='image',
            name='source_location',
            field=models.URLField(blank=True, help_text='For online resources, this should be the location of the resource. For archives, this should be a link to the finding aid, if available.', max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='rdfproperty',
            name='partOf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='blog.RDFSchema'),
        ),
        migrations.AddField(
            model_name='rdfproperty',
            name='domain',
            field=models.ForeignKey(null=True, blank=True, related_name='in_domain_of', to='blog.RDFClass'),
        ),
        migrations.AddField(
            model_name='rdfproperty',
            name='range',
            field=models.ForeignKey(null=True, blank=True, related_name='in_range_of', to='blog.RDFClass'),
        ),
        migrations.AddField(
            model_name='rdfproperty',
            name='subPropertyOf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superPropertyOf', to='blog.RDFProperty'),
        ),
        migrations.AddField(
            model_name='rdfclass',
            name='partOf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='blog.RDFSchema'),
        ),
        migrations.AddField(
            model_name='rdfclass',
            name='subClassOf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superClassOf', to='blog.RDFClass'),
        ),
    ]
